//beats 74.72% users
class Solution {
    public static boolean isPalindrome(String s) {
        s = s.toLowerCase();
        int i = 0;
        int j = s.length()-1;
        while (i < j) {
            char start = s.charAt(i);
            char end = s.charAt(j);
            if (!Character.isLetterOrDigit(start)) {
                i++;
            } else if (!Character.isLetterOrDigit(end)) {
                j--;
            } else if (start != end) {
                return false;
            } else {
                i++;
                j--;
            }
        }
        return true;
    }
}


//beats 100% users
class Solution {
    public static boolean isPalindrome(String s) {
         int i = 0, j = s.length() - 1;
        while (i < j) {
            char c1 = s.charAt(i);
            char c2 = s.charAt(j);
            if (!((c1 >= '0' && c1 <= '9') || (c1 >= 'a' && c1 <= 'z') || (c1 >= 'A' && c1 <= 'Z'))) {
                i++;

            } else if (!((c2 >= '0' && c2 <= '9') || (c2 >= 'a' && c2 <= 'z') || (c2 >= 'A' && c2 <= 'Z'))) {
                j--;
            } else {
                if (c1 >= 'A' && c1 <= 'Z') {
                    c1 = (char) (c1 + 'a' - 'A');
                }
                if (c2 >= 'A' && c2 <= 'Z') {
                    c2 = (char) (c2 + 'a' - 'A');
                }
                if (c1 != c2) {
                    return false;
                }
                i++;
                j--;
            }

        }
        return true;

    }
}
