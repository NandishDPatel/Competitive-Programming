//beats 100% users
class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        int row = rowSearch(matrix,target);
        if(matrix[row][0]==target){
            return true;
        }
        int col = colSearch(matrix,target,row);
        return matrix[row][col]==target ? true : false;
    }
    public int rowSearch(int[][] matrix,int target){
        int low = 0;
        int high = matrix.length-1;
        int mid = -1;
        while(low<=high){
            mid = high - (high-low)/2;
            if(matrix[mid][0]==target){
                return mid;
            } else if(matrix[mid][0]<target){
                low = mid+1;
            } else{
                high = mid-1;
            }
        }
        return (low > 0) ? low - 1 : 0;
    }

    public int colSearch(int[][] matrix,int target,int row){
        int low = 0;
        int high = matrix[0].length-1;
        int mid = -1;
        while(low<=high){
            mid = high - (high-low)/2;
            if(matrix[row][mid]==target){
                return mid;
            } else if(matrix[row][mid]<target){
                low = mid+1;
            } else{
                high = mid-1;
            }
        }
        return mid;
    }
}
