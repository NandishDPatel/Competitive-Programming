//beats 58% users
class Solution {
    public boolean isValid(String s) {
        Stack stack = new Stack();
        for(char ch : s.toCharArray()){
            if(ch=='(' || ch=='{' || ch=='['){
                stack.push(ch);
            } else{
                if(!stack.isEmpty()){
                    if(ch==')' && (char)stack.peek()=='(')
                    {
                        stack.pop();
                    } else if(ch=='}' && (char)stack.peek()=='{')
                    {
                        stack.pop();
                    } else if(ch==']' && (char)stack.peek()=='[')
                    {
                        stack.pop();
                    } else{
                        return false;
                    }
                } else{
                    return false;
                }
            }
        }
        return (stack.isEmpty()) ? true : false;
    }
}

//beats 98% users - leetcode solution
class Solution {
    public boolean isValid(String s) {
        Stack<Character> stack = new Stack<>();
        for (char ch : s.toCharArray()) {
            if (ch == '(' || ch == '{' || ch == '[') {
                stack.push(ch);
            } else {
                if (stack.isEmpty()) {
                    return false;
                }
                char top = stack.peek();
                if ((ch == ')' && top == '(') ||
                    (ch == '}' && top == '{') ||
                    (ch == ']' && top == '[')) {
                    stack.pop();
                } else {
                    return false;
                }
            }
        }
        return stack.isEmpty();
    }
}
