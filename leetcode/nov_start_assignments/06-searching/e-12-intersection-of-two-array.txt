//5%
class Solution {
    public int[] intersection(int[] nums1, int[] nums2) {
        HashSet<Integer> set = new HashSet<>();
        ArrayList<Integer> list = new ArrayList<>();
        for(int i=0;i<nums1.length;i++){
            if(!set.contains(nums1[i])){
                set.add(nums1[i]);
            }
        }
        for(int j=0;j<nums2.length;j++){
            if(set.contains(nums2[j])){
                list.add(nums2[j]);
                set.remove(nums2[j]);
            }
        }
        int result[] = new int[list.size()];
        for(int k=0;k<list.size();k++){
            result[k] = list.get(k);
        }
        return result;
    }
}

//98%
class Solution {
    public int[] intersection(int[] nums1, int[] nums2) {
        int[] temp = new int[1001];
        int count = 0;
        HashSet<Integer> set = new HashSet<>();
        for(int i=0;i<nums1.length;i++){
            if(temp[nums1[i]]==0){
                temp[nums1[i]] = 1;
            }
        }
        for(int j=0;j<nums2.length;j++){
            if(temp[nums2[j]]==1){
                temp[nums2[j]] = 0;
                set.add(nums2[j]);
                count++;
            }
        }
        int result[] = new int[count];
        int k = 0;
        for(Integer num : set){
            result[k++] = (int)num;
        }
        return result;
    }
}