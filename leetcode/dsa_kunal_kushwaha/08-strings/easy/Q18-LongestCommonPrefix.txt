//beats 77% users
class Solution {
     public static String longestCommonPrefix(String[] strs) {
        StringBuilder sb = new StringBuilder();
        int min = 200;
        String temp = "";
        for (int i = 0; i < strs.length; i++) {
            if(strs[i].length()<min){
                min = strs[i].length();
            }
        }
        for (int i = 0; i < min; i++) {
            int count = 0;
            char chk = strs[0].charAt(i); //'f'
            for (int j = 0; j < strs.length; j++) {
                if(strs[j].charAt(i)==chk){
                    count++;
                }
            }
            if(count == strs.length){
                sb.append(chk);
            } else{
                return sb.toString();
            }
        }
        return sb.toString();
    }
}


//same users even though I'm using the Sorting
class Solution {
     public static String longestCommonPrefix(String[] strs) {
        StringBuilder sb = new StringBuilder();
        int min = 200;
        String temp = "";
        Arrays.sort(strs);
        for (int i = 0; i < strs[0].length(); i++) {
            if(strs[0].charAt(i) == strs[strs.length-1].charAt(i)){
                sb.append(strs[0].charAt(i));
            } else{
                return sb.toString();
            }
        }
        return sb.toString();
    }
}

//beats 100% users
class Solution {
    public String longestCommonPrefix(String[] strs) {
        if (strs == null || strs.length == 0) {
            return "";
        }

        String prefix = strs[0];
        for (int i = 1; i < strs.length; i++) {
            while (strs[i].indexOf(prefix) != 0) {
                prefix = prefix.substring(0, prefix.length() - 1);
                if (prefix.isEmpty()) {
                    return "";
                }
            }
        }

        return prefix;
    }
}
