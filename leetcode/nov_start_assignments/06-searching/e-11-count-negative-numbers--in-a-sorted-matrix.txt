//1351 - 100%
class Solution {
    public int countNegatives(int[][] grid) {
        int rows = grid.length;
        int cols = grid[0].length;
        int ans = 0;
        for(int i=rows-1,j=0;i>=0 && j<cols;){
            if(grid[i][j]<0){
                ans += cols-j;
                --i;
            } else{
                ++j;
            }
        }
        return ans;
        }
}


//failed try
class Solution {
    public int countNegatives(int[][] grid) {
        int rowL = 0,rowH = grid.length-1;
        int colL = 0,colH = grid[0].length-1;
        int row = 0,col = 0;
        while(row>=0 && row<grid.length-1){
            row = rowL + (rowH-rowL)/2; //1,2
            if(row==0){
                row = 0;
                break;
            } else if(grid[row][0]<0 && grid[row-1][0]>=0){
                row = row-1;
                break;
            } else if(grid[row][0]<0 && grid[row-1][0]<0){
                rowH = row-1;
            } else{
                rowL = row+1; //1,2
            }
        }
        System.out.println(row);
        while(col>=0 && col<grid[0].length-1){
            col = colL + (colH-colL)/2;
            if(col==0){
                col = 0;
                break;
            } else if(grid[row][col]<0 && grid[row][col-1]>=0){
                col = col-1;
                break;
            } else if(grid[row][col]<0 && grid[row][col-1]<0){
                colH = col-1;
            } else{
                colL = col+1;
            }
        }
        System.out.println(col);
        int square = ((grid.length-(col+1))*(grid[0].length-(row+1))); //16
        System.out.println(square);
        int addRow = row;
        int addCol = col;
        int ans = square+addRow+addCol-1;
        return ans;
    }
}