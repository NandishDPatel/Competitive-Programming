//beats 40% users
class Solution {
    public boolean judgeCircle(String moves) {
        int arr[] = new int[2];
        for(int i=0;i<moves.length();i++){
            char ch = moves.charAt(i);
            if(ch == 'U'){
                arr[0] += 1;
            } else if(ch == 'D'){
                arr[0] -= 1;
            } else if(ch == 'L'){
                arr[1] -= 1;
            } else{
                arr[1] += 1;
            }
        }
        if(arr[0] == 0 && arr[1]==0){
            return true;
        }
        return false;
    }
}

//beats 37% users :(
class Solution {
    public static boolean judgeCircle(String moves){
//        boolean ans = false;
        int arr[] = {0,0};
        for (int i=0;i<moves.length();i++){
            char ch = moves.charAt(i);
            if(ch == 'U'){
                arr[0]++;
            } else if(ch == 'D'){
                arr[0]--;
            } else if(ch == 'L'){
                arr[1]++;
            } else{
                arr[1]--;
            }
        }
        if(arr[0]==0 && arr[1]==0){
            return true;
        }
        return false;
    }
}

//beats 97% users
class Solution {
    public static boolean judgeCircle(String moves){
        int upDown = 0;
        int leftRight = 0;
        for(char c: moves.toCharArray()){
            switch(c){
                case 'U':
                    upDown++;
                    break;
                case 'D':
                    upDown--;
                    break;
                case 'L':
                    leftRight++;
                    break;
                case 'R':
                    leftRight--;
                    break;
            }
        }
        return (upDown==0 && leftRight==0);
    }
}
