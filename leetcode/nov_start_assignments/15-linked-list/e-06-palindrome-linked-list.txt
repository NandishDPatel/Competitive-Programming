//234 - 99%
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public boolean isPalindrome(ListNode head) {
        if(head==null || head.next==null){
            return true;
        }
        ListNode slow = head;
        ListNode fast = head;
        ListNode temp = head;
        while(fast!=null && fast.next!=null){
            slow = slow.next;
            fast = fast.next.next;
        }     
        if(slow==null){ 
            return true;
        }
        if(slow.next==null){
            if(slow.val==temp.val){
                return true;
            } else{
                return false;
            }
        }
        ListNode prev = null;
        ListNode ahead = slow.next;
        while(ahead!=null){
            slow.next = prev;
            prev = slow;
            slow = ahead;
            ahead = ahead.next;
        }
        slow.next = prev;
        while(slow!=null){
            if(slow.val!=temp.val){
                return false;
            }
            temp = temp.next;
            slow = slow.next;
        }
        return true;

    }
}