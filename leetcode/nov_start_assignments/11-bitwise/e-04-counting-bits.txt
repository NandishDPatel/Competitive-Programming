//17%
class Solution {
    public int[] countBits(int n) {
        int result[] = new int[n+1];
        int num = 0;
        int count = 0;
        for(int i=0;i<n+1;i++){
            num = i;
            count = 0;
            result[i] = countOnes(num,count);
        }   
        return result;
    }
    private int countOnes(int num,int count){
        if(num==0){
            return count;
        }
        int check = num & 1;
        if(check==1){
            count++;
        } 
        num >>= 1;
        return countOnes(num,count);
    }
}

//21%
class Solution {
    public int[] countBits(int n) {
        int result[] = new int[n+1];
        for(int i=0;i<n+1;i++){
            result[i] = countOnes(i);
        }   
        return result;
    }
    private int countOnes(int num){
        if(num==0){
            return 0;
        }
        int ans = 0,check=0;
        while(num>0){
            check = num & 1;
            if(check==1){
                ans++;
            } 
            num >>= 1;
        }        
        return ans;
    }
}

//96% 
class Solution {
    public int[] countBits(int n) {
        int[] ans = new int[n + 1];
        for (int i = 1; i <= n; i++) {
            ans[i] = ans[i >> 1] + (i & 1);
        }
        return ans;
    }
}