//beats 30% users
class Solution {
    public void rotate(int[] nums, int k) {
        if(nums.length!=1){
        int j = nums.length-(k%nums.length);
        int z = 0;
        int temp[] = new int[nums.length];
        for(int i=0;i<nums.length;i++){
            if(j!=nums.length){
                temp[i] = nums[j++];
            } else{
                temp[i] = nums[z++];
            }
        }
        for(int i=0;i<nums.length;i++){
            nums[i] = temp[i];
        }
        }
    }
}

//beats 100% users
class Solution {
    public void rotate(int[] nums, int k) {
        int j = nums.length-(k%nums.length);
        reverseArr(nums,0,j-1);
        // System.out.println(Arrays.toString(nums));
        reverseArr(nums,j,nums.length-1);
        // System.out.println(Arrays.toString(nums));
        reverseArr(nums,0,nums.length-1);
        // System.out.println(Arrays.toString(nums));
    }
    public void reverseArr(int[] nums,int start,int end){
        while(start<end){
            int temp = nums[start];
            nums[start] = nums[end];
            nums[end] = temp;
            start++;
            end--;
        }
    }
}