//beats 17% users
class Solution {
    public int findDuplicate(int[] nums) {
        Arrays.sort(nums);
        for(int i=0;i<nums.length;i++){
            if(nums[i]==nums[i+1]){
                return nums[i];
            }
        }
        return nums[nums.length-1];
    }
}

//beats 95% users
class Solution {
    public int findDuplicate(int[] nums) {
        int temp[] = new int[nums.length];
        for(int i=0;i<nums.length;i++){
            if(temp[nums[i]-1]==0){
                temp[nums[i]-1] = 1;
            } else{
                return nums[i];
            }
        }
        return -1;
    }
}

//beats 35% users using HashMap
class Solution {
    public int findDuplicate(int[] nums) {
        HashMap<Integer,Integer> map = new HashMap<>();
        for(int i=0;i<nums.length;i++){
            if(!(map.containsKey(nums[i]))){
                map.put(nums[i],nums[i]);
            } else{
                return nums[i];
            }
        }
        return -1;
    }
}
