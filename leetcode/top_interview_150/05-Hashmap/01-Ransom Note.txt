//beats 58% users only
class Solution {
    public boolean canConstruct(String ransomNote, String magazine) {
        HashMap<Character,Integer> map = new HashMap<>();
        for(int i=0;i<magazine.length();i++){
            char ch = magazine.charAt(i);
            map.put(ch,map.getOrDefault(ch,1)+1);
        }
        for(int j=0;j<ransomNote.length();j++){
            char ch = ransomNote.charAt(j);
            if(!(map.containsKey(ch))){
                return false;
            } else{
                map.put(ch,map.get(ch)-1);
                if(map.get(ch)==0){
                    return false;
                }
            }
        }
        return true;
    }
}

//beats 99% users - leetcode solution
class Solution {
    public boolean canConstruct(String ransomNote, String magazine) {
        if(ransomNote.length()>magazine.length()){
            return false;
        }
        int[] alphabets_counter = new int[26];
        for (char c : magazine.toCharArray())
            alphabets_counter[c-'a']++;

        for (char c : ransomNote.toCharArray()){
            if (alphabets_counter[c-'a'] == 0) return false;
            alphabets_counter[c-'a']--;
        }
        return true;
    }
}
