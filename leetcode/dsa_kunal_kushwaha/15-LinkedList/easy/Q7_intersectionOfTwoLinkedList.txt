//beats 99.94% users
public class Solution {
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
        //getSize of both linked lists
        ListNode temp1 = headA;
        ListNode temp2 = headB;
        int size1 = 1;
        int size2 = 1;
        while(temp1.next!=null){
            temp1 = temp1.next;
            size1++;
        }
        while(temp2.next!=null){
            temp2 = temp2.next;
            size2++;
        }

        //size2 has extra nodes
        int check = size2 - size1;
        temp1 = headA;
        temp2 = headB;
        int curr1 = 1;
        int curr2 = 1;
        if(check>0){
            while(check!=0){
                temp2 = temp2.next;
                curr2++;
                check--;
            }
        }
        //size1 has extra nodes
        if(check<0){
            while(check!=0){
                temp1 = temp1.next;
                check++;
                curr1++;
            }
        }

        while(curr1!=size1+1 && curr2!=size2+1){
            if(temp1 == temp2){
                return temp1;
            } else{
                temp1 = temp1.next;
                temp2 = temp2.next;
                curr1++;
                curr2++;
            }
        }
        return null;
    }
}
