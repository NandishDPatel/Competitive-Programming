//232 - 100%
class MyQueue {
    private Stack<Integer> st1;
    private Stack<Integer> st2;
    public MyQueue() {
        st1 = new Stack<>();
        st2 = new Stack<>();
    }
    
    public void push(int x) {
        st1.push(x);
    }
    
    public int pop() {
        int result = 0;
        if(!st1.isEmpty()){
            while(!st1.isEmpty()){
                st2.push(st1.peek());
                st1.pop();
            } 
            result = st2.peek();
            st2.pop();
            while(!st2.isEmpty()){
                st1.push(st2.peek());
                st2.pop();
            }
        }
        return result;
    }
    
    public int peek() {
        int result = 0;
        if(!st1.isEmpty()){    
            while(!st1.isEmpty()){
                st2.push(st1.peek());
                st1.pop();
            } 
            result = st2.peek();
            while(!st2.isEmpty()){
                st1.push(st2.peek());
                st2.pop();
            }
        }
        return result;
    }
    
    public boolean empty() {
        return st1.isEmpty();
    }
}

/**
 * Your MyQueue object will be instantiated and called as such:
 * MyQueue obj = new MyQueue();
 * obj.push(x);
 * int param_2 = obj.pop();
 * int param_3 = obj.peek();
 * boolean param_4 = obj.empty();
 */