//21 - 100%
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
        if(list2==null){
            return list1;
        }
        if(list1==null){
            return list2;
        }
        ListNode prev = null;
        ListNode first = list1;
        ListNode second = list2;
        if(first.val>second.val){
            prev = second;
            second = second.next;
        } else{
            prev = first;
            first = first.next;
        }
        ListNode head = prev;
        
        while(first!=null && second!=null){
            if(first.val<=second.val){
                prev.next = first;
                prev = first;
                first = first.next;
            } else{
                prev.next = second;
                prev = second;
                second = second.next;
            }
        }
        while(first!=null){
            prev.next = first;
            prev = first;
            first = first.next;
        }
        while(second!=null){
            prev.next = second;
            prev = second;
            second = second.next;
        }
        return head;
    }
}