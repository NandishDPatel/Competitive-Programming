//beats 100% of the users
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
        if(list1 == null){
            return list2;
        }
        if(list2 == null){
            return list1;
        }
        ListNode head = null;
        ListNode temp = null;
        ListNode temp1 = list1;
        ListNode temp2 = list2;
        if(temp1.val>=temp2.val){
            head = temp2;
            temp2 = temp2.next;
        } else{
            head = temp1;
            temp1 = temp1.next;
        }
        ListNode first = head;
        while(temp1!=null && temp2!=null){
            if(temp1.val >= temp2.val){
                first.next = temp2;
                first = temp2;
                temp2 = temp2.next;
            } else{
                first.next = temp1;
                first = temp1;
                temp1 = temp1.next;
            }
        }
        while(temp1!=null){
            first.next = temp1;
            first = temp1;
            temp1 = temp1.next;
        }
        while(temp2!=null){
            first.next = temp2;
            first = temp2;
            temp2 = temp2.next;
        }
        first.next = null;
        return head;
    }
}
