//1365 - 84%
class Solution {
    public int[] smallerNumbersThanCurrent(int[] nums) {
        HashMap<Integer,Integer> map = new HashMap<>();
        int temp[] = nums.clone();; 
        Arrays.sort(temp); //[1,2,2,3,8]
        int len = nums.length-1;
        for(int i=0;i<nums.length;i++){
            if(!map.containsKey(temp[i])){
                map.put(temp[i],i); //1-0,2-1,3-3,8-4
            }
        }
        int target[] = new int[nums.length];
        for(int i=0;i<nums.length;i++){
            target[i] = map.get(nums[i]);
        }
        return target;
    }
}

//100%
class Solution {
    public int[] smallerNumbersThanCurrent(int[] nums) {
        int temp[] = new int[101];
        int target[] = new int[nums.length];
        for(int i=0;i<nums.length;i++){
            temp[nums[i]]++;
        }
        int sum = 0;
        int count = nums.length;
        for(int i=temp.length-1;i>=0;i--){
            if(temp[i]!=0){
                temp[i] = count - temp[i];
                count = temp[i];
            }
        }
        for(int i=0;i<nums.length;i++){
            target[i] = temp[nums[i]];
        }
        return target;
    }
}