//2000 - 52%
class Solution {
    public String reversePrefix(String word, char ch) {
        StringBuilder sb = new StringBuilder();
        StringBuilder result = new StringBuilder();
        boolean firstOccur = false;
        for(char temp : word.toCharArray()){
            if(temp==ch && !firstOccur){
                sb.append(temp);
                result.append(sb.reverse().toString());
                firstOccur = true;
                sb.setLength(0);
            } else{
                sb.append(temp);
            }
        }
        result.append(sb.toString());
        return result.toString();
    }
}

//same - 52%
class Solution {
    public String reversePrefix(String word, char ch) {
        StringBuilder result = new StringBuilder();
        boolean firstOccur = false;
        int i = 0;
        int revPoint = 0;
        while(i<word.length()){
            if(word.charAt(i)!=ch){
                i++;
            } else{
                break;
            }
        }
        if(i==word.length()){
            revPoint = 0;
            while(revPoint<word.length()){
                result.append(word.charAt(revPoint));
                revPoint++;
            }
            return result.toString();
        }
        revPoint = i;
        while(revPoint>=0){
            result.append(word.charAt(revPoint));
            revPoint--;
        }
        i++;
        while(i<word.length()){
            result.append(word.charAt(i));
            i++;
        }
        return result.toString();
    }
}